
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.cunoc.JFlex_Cup.HTML;

import java_cup.runtime.*;
import com.cunoc.Server.Console;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class SicHTML extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public SicHTML() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public SicHTML(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public SicHTML(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\041\000\002\002\004\000\002\002\005\000\002\003" +
    "\006\000\002\003\002\000\002\004\004\000\002\004\003" +
    "\000\002\005\005\000\002\005\005\000\002\005\005\000" +
    "\002\005\005\000\002\005\005\000\002\005\005\000\002" +
    "\005\005\000\002\005\005\000\002\014\004\000\002\014" +
    "\003\000\002\010\005\000\002\010\005\000\002\012\004" +
    "\000\002\012\003\000\002\013\003\000\002\013\005\000" +
    "\002\011\003\000\002\011\003\000\002\007\004\000\002" +
    "\007\003\000\002\006\005\000\002\006\005\000\002\006" +
    "\005\000\002\006\005\000\002\006\005\000\002\006\005" +
    "\000\002\006\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\113\000\004\004\004\001\002\000\006\005\ufffe\006" +
    "\007\001\002\000\004\002\006\001\002\000\004\002\001" +
    "\001\002\000\022\010\023\012\020\014\016\016\017\020" +
    "\014\022\012\024\015\026\013\001\002\000\004\005\011" +
    "\001\002\000\004\002\000\001\002\000\006\030\071\032" +
    "\067\001\002\000\006\030\071\032\067\001\002\000\010" +
    "\030\071\032\067\052\100\001\002\000\006\030\071\032" +
    "\067\001\002\000\004\056\064\001\002\000\020\034\036" +
    "\036\035\040\043\042\042\044\040\046\041\050\033\001" +
    "\002\000\004\056\031\001\002\000\024\007\026\010\023" +
    "\012\020\014\016\016\017\020\014\022\012\024\015\026" +
    "\013\001\002\000\024\007\ufffc\010\ufffc\012\ufffc\014\ufffc" +
    "\016\ufffc\020\ufffc\022\ufffc\024\ufffc\026\ufffc\001\002\000" +
    "\004\057\024\001\002\000\004\011\025\001\002\000\024" +
    "\007\ufffb\010\ufffb\012\ufffb\014\ufffb\016\ufffb\020\ufffb\022" +
    "\ufffb\024\ufffb\026\ufffb\001\002\000\006\005\ufffe\006\007" +
    "\001\002\000\024\007\ufffd\010\ufffd\012\ufffd\014\ufffd\016" +
    "\ufffd\020\ufffd\022\ufffd\024\ufffd\026\ufffd\001\002\000\004" +
    "\005\uffff\001\002\000\004\013\032\001\002\000\024\007" +
    "\ufffa\010\ufffa\012\ufffa\014\ufffa\016\ufffa\020\ufffa\022\ufffa" +
    "\024\ufffa\026\ufffa\001\002\000\004\060\062\001\002\000" +
    "\022\017\060\034\036\036\035\040\043\042\042\044\040" +
    "\046\041\050\033\001\002\000\004\060\056\001\002\000" +
    "\004\060\054\001\002\000\022\017\uffe8\034\uffe8\036\uffe8" +
    "\040\uffe8\042\uffe8\044\uffe8\046\uffe8\050\uffe8\001\002\000" +
    "\004\060\052\001\002\000\004\060\050\001\002\000\004" +
    "\060\046\001\002\000\004\060\044\001\002\000\004\041" +
    "\045\001\002\000\022\017\uffe5\034\uffe5\036\uffe5\040\uffe5" +
    "\042\uffe5\044\uffe5\046\uffe5\050\uffe5\001\002\000\004\043" +
    "\047\001\002\000\022\017\uffe4\034\uffe4\036\uffe4\040\uffe4" +
    "\042\uffe4\044\uffe4\046\uffe4\050\uffe4\001\002\000\004\047" +
    "\051\001\002\000\022\017\uffe2\034\uffe2\036\uffe2\040\uffe2" +
    "\042\uffe2\044\uffe2\046\uffe2\050\uffe2\001\002\000\004\045" +
    "\053\001\002\000\022\017\uffe3\034\uffe3\036\uffe3\040\uffe3" +
    "\042\uffe3\044\uffe3\046\uffe3\050\uffe3\001\002\000\004\035" +
    "\055\001\002\000\022\017\uffe7\034\uffe7\036\uffe7\040\uffe7" +
    "\042\uffe7\044\uffe7\046\uffe7\050\uffe7\001\002\000\004\037" +
    "\057\001\002\000\022\017\uffe6\034\uffe6\036\uffe6\040\uffe6" +
    "\042\uffe6\044\uffe6\046\uffe6\050\uffe6\001\002\000\024\007" +
    "\ufff8\010\ufff8\012\ufff8\014\ufff8\016\ufff8\020\ufff8\022\ufff8" +
    "\024\ufff8\026\ufff8\001\002\000\022\017\uffe9\034\uffe9\036" +
    "\uffe9\040\uffe9\042\uffe9\044\uffe9\046\uffe9\050\uffe9\001\002" +
    "\000\004\051\063\001\002\000\022\017\uffe1\034\uffe1\036" +
    "\uffe1\040\uffe1\042\uffe1\044\uffe1\046\uffe1\050\uffe1\001\002" +
    "\000\004\015\065\001\002\000\024\007\ufff9\010\ufff9\012" +
    "\ufff9\014\ufff9\016\ufff9\020\ufff9\022\ufff9\024\ufff9\026\ufff9" +
    "\001\002\000\010\025\076\030\071\032\067\001\002\000" +
    "\004\056\074\001\002\000\014\023\ufff2\025\ufff2\027\ufff2" +
    "\030\ufff2\032\ufff2\001\002\000\004\056\072\001\002\000" +
    "\004\031\073\001\002\000\020\021\ufff1\023\ufff1\025\ufff1" +
    "\027\ufff1\030\ufff1\032\ufff1\052\ufff1\001\002\000\004\033" +
    "\075\001\002\000\020\021\ufff0\023\ufff0\025\ufff0\027\ufff0" +
    "\030\ufff0\032\ufff0\052\ufff0\001\002\000\024\007\ufff6\010" +
    "\ufff6\012\ufff6\014\ufff6\016\ufff6\020\ufff6\022\ufff6\024\ufff6" +
    "\026\ufff6\001\002\000\014\023\ufff3\025\ufff3\027\ufff3\030" +
    "\ufff3\032\ufff3\001\002\000\006\054\106\055\107\001\002" +
    "\000\012\021\104\030\071\032\067\052\100\001\002\000" +
    "\012\021\uffee\030\uffee\032\uffee\052\uffee\001\002\000\012" +
    "\021\uffed\030\uffed\032\uffed\052\uffed\001\002\000\024\007" +
    "\ufff7\010\ufff7\012\ufff7\014\ufff7\016\ufff7\020\ufff7\022\ufff7" +
    "\024\ufff7\026\ufff7\001\002\000\012\021\uffef\030\uffef\032" +
    "\uffef\052\uffef\001\002\000\004\053\uffea\001\002\000\004" +
    "\053\uffeb\001\002\000\004\053\111\001\002\000\012\021" +
    "\uffec\030\uffec\032\uffec\052\uffec\001\002\000\010\027\113" +
    "\030\071\032\067\001\002\000\024\007\ufff5\010\ufff5\012" +
    "\ufff5\014\ufff5\016\ufff5\020\ufff5\022\ufff5\024\ufff5\026\ufff5" +
    "\001\002\000\010\023\115\030\071\032\067\001\002\000" +
    "\024\007\ufff4\010\ufff4\012\ufff4\014\ufff4\016\ufff4\020\ufff4" +
    "\022\ufff4\024\ufff4\026\ufff4\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\113\000\004\002\004\001\001\000\004\003\007\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\004\020" +
    "\005\021\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\010\067\014\113\001\001\000\006\010\067\014\111" +
    "\001\001\000\010\010\102\012\100\013\101\001\001\000" +
    "\006\010\067\014\065\001\001\000\002\001\001\000\006" +
    "\006\036\007\033\001\001\000\002\001\001\000\004\005" +
    "\026\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\003\027\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\006\060\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\010\076\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\107\001\001\000\006\010\102\013\104\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\076\001\001\000\002" +
    "\001\001\000\004\010\076\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$SicHTML$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$SicHTML$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$SicHTML$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



        private double contador= 0;
        private Symbol s;
        private int errorCounter= 0;

    SicHTML(LexicoHTML lexico){
        super(lexico);
    }
    public void syntax_error(Symbol cur_token) {
        errorCounter++;
        System.out.println("\n"+errorCounter+" - Clase<"+"> en simbolo<" + sym.terminalNames[cur_token.sym]+String.format(">posicion: <%d>, <%d>", (cur_token.left+1), (cur_token.right+1)));
        Console.ConsoleText.append("\n"+errorCounter+" - Clase<"+"> en simbolo<" + sym.terminalNames[cur_token.sym]+String.format(">posicion: <%d>, <%d>", (cur_token.left+1), (cur_token.right+1)));
    }
    public Symbol getSymbol(){
        return this.s;
    }
    public int getErrorCounter(){
        return this.errorCounter;
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$SicHTML$actions {
  private final SicHTML parser;

  /** Constructor */
  CUP$SicHTML$actions(SicHTML parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$SicHTML$do_action_part00000000(
    int                        CUP$SicHTML$act_num,
    java_cup.runtime.lr_parser CUP$SicHTML$parser,
    java.util.Stack            CUP$SicHTML$stack,
    int                        CUP$SicHTML$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$SicHTML$result;

      /* select the action based on the action number */
      switch (CUP$SicHTML$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)).value;
		RESULT = start_val;
              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$SicHTML$parser.done_parsing();
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= INICIO_WORLDS accion FINAL_WORLDS 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // accion ::= INICIO_WORLD datos_mapa FINAL_WORLD accion 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("accion",1, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-3)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // accion ::= 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("accion",1, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // datos_mapa ::= datos_mapa atributos 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("datos_mapa",2, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // datos_mapa ::= atributos 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("datos_mapa",2, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // atributos ::= INICIO_NAME CARACTER FINAL_NAME 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("atributos",3, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // atributos ::= INICIO_ROWS ENTERO FINAL_ROWS 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("atributos",3, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // atributos ::= INICIO_COLS ENTERO FINAL_COLS 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("atributos",3, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // atributos ::= INICIO_CONFIG bucle_color FINAL_CONFIG 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("atributos",3, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // atributos ::= INICIO_BOARD tipo_poss_dar FINAL_BOARD 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("atributos",3, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // atributos ::= INICIO_TARGETS solo_poss FINAL_TARGETS 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("atributos",3, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // atributos ::= INICIO_PLAYER solo_poss FINAL_PLAYER 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("atributos",3, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // atributos ::= INICIO_BOXES solo_poss FINAL_BOXES 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("atributos",3, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // solo_poss ::= solo_poss pos 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("solo_poss",10, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // solo_poss ::= pos 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("solo_poss",10, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // pos ::= INICIO_POSX ENTERO FINAL_POSX 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)).value;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("pos",6, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // pos ::= INICIO_POSY ENTERO FINAL_POSY 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)).value;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("pos",6, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // tipo_poss_dar ::= tipo_poss_dar typo_poss 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("tipo_poss_dar",8, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // tipo_poss_dar ::= typo_poss 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("tipo_poss_dar",8, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // typo_poss ::= pos 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("typo_poss",9, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // typo_poss ::= INICIO_TYPE tipo_board FINAL_TYPE 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("typo_poss",9, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // tipo_board ::= HALL 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("tipo_board",7, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // tipo_board ::= BRICK 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("tipo_board",7, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // bucle_color ::= bucle_color color 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("bucle_color",5, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-1)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // bucle_color ::= color 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("bucle_color",5, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // color ::= INICIO_BOX_COLOR COLOR FINAL_BOX_COLOR 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("color",4, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // color ::= INICIO_BOX_COLOR_ON COLOR FINAL_BOX_COLOR_ON 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("color",4, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // color ::= INICIO_TARGET_COLOR COLOR FINAL_TARGET_COLOR 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("color",4, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // color ::= INICIO_BRICK_COLOR COLOR FINAL_BRICK_COLOR 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("color",4, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // color ::= INICIO_HALL_COLOR COLOR FINAL_HALL_COLOR 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("color",4, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // color ::= INICIO_UNDEFINED_COLOR COLOR FINAL_UNDEFINED_COLOR 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("color",4, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // color ::= INICIO_PLAYER_COLOR COLOR FINAL_PLAYER_COLOR 
            {
              Object RESULT =null;

              CUP$SicHTML$result = parser.getSymbolFactory().newSymbol("color",4, ((java_cup.runtime.Symbol)CUP$SicHTML$stack.elementAt(CUP$SicHTML$top-2)), ((java_cup.runtime.Symbol)CUP$SicHTML$stack.peek()), RESULT);
            }
          return CUP$SicHTML$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$SicHTML$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$SicHTML$do_action(
    int                        CUP$SicHTML$act_num,
    java_cup.runtime.lr_parser CUP$SicHTML$parser,
    java.util.Stack            CUP$SicHTML$stack,
    int                        CUP$SicHTML$top)
    throws java.lang.Exception
    {
              return CUP$SicHTML$do_action_part00000000(
                               CUP$SicHTML$act_num,
                               CUP$SicHTML$parser,
                               CUP$SicHTML$stack,
                               CUP$SicHTML$top);
    }
}

}
